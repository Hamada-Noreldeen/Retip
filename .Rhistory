devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
?utils::globalVariables()
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
?head()
devtools::document()
library(Retip)
devtools::document()
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
R CMD Rd2pdf Retip
library(devtools)
check(cleanup = FALSE,manual = TRUE,path = getwd())
check(document = TRUE)
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred")
build_manual(pkg = "Retip")
build_manual(pkg = "Retip")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
build_manual(pkg = "Retip")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
build_manual(pkg = "Retip")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
build_manual(pkg = "Retip")
devtools::build_manual(Retip)
devtools::build_manual(pkg = Retip)
library(Retip)
devtools::build_manual(pkg = Retip)
devtools::build_manual(pkg = "Retip")
devtools::document()
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
devtools::document()
library(Retip)
library(Retip)
install.packages("rmarkdown")
devtools::use_vignette("Retip")
library(Retip)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::kable(head(HILIC,))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::kable(head(HILIC,10))
HILIC <- HILIC
knitr::kable(head(HILIC,10))
knitr::kable(head(mtcars, 10))
knitr::kable(head(HILIC,10))
knitr::kable(head(HILIC,10))
library(Retip)
library(Retip)
library(knitr)
knit('HILIC.RData')
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip/data")
knit('HILIC.RData')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::kable(head(mtcars,10))
knitr::kable(head(HILIC,10))
knit_with_parameters('C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip/vignettes/retip.Rmd')
HILIC <- HILIC
knit('HILIC.Rmd')
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
save(HILIC,file = 'HILIC.Rmd')
knit('HILIC.Rmd')
knitr::kable(head(HILIC,10))
load("HILIC.RData")
load("/data/HILIC.RData")
load("./data/HILIC.RData")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip/data")
load("HILIC.RData")
load("HILIC.RData")
load(HILIC)
HILIC <- (HILIC)
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
knitr::kable(head(HILIC,10))
HILIC <- load(file = "hilic.RData")
HILIC <- load(file = "hilic.RData")
library(Retip)
knitr::kable(head(HILIC,10))
library(Retip)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Retip)
library(Retip)
#>Starts parallel computing
prep.wizard()
#>import excel file with mandatory field
RP <- readxl::read_excel("Riken_PlaSMA_RP.xlsx", col_types = c("text",
"text", "text", "numeric"))
library(Retip)
#>Starts parallel computing
prep.wizard()
#>import excel file with mandatory field
RP <- readxl::read_excel("Riken_PlaSMA_RP.xlsx", col_types = c("text",
"text", "text", "numeric"))
#> Calculate Chemical Descriptors from CDK
descs <- getCD(HILIC)
fig.cap = "plantcyc_riken.jpeg"
fig.cap = "plantcyc_riken.jpeg"
knitr::fig.cap = "plantcyc_riken.jpeg"
knitr::fig_chunk(fig.cap = "plantcyc_riken.jpeg")
knitr::fig_chunk(fig.path =  "plantcyc_riken.jpeg")
knitr::fig_chunk(label = "lab",fig.path =  "plantcyc_riken.jpeg")
image_load(path = "plantcyc_riken.jpeg")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
image_load(path = "plantcyc_riken.jpeg")
img1_path <- "inst/extdata/plantcyc_riken.jpeg"
img1 <- readPNG(img1_path, native = TRUE, info = TRUE)
load.image
?image_load
path <- "inst/extdata/plantcyc_riken.jpeg"
knitr::include_graphics(path, auto_pdf = getOption("knitr.graphics.auto_pdf", FALSE),
dpi = NULL)
path <- "inst/extdata/plantcyc_riken.jpeg"
knitr::include_graphics(path,
dpi = NULL)
library(Retip)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Retip)
path <- "inst/extdata/plantcyc_riken.jpeg"
knitr::include_graphics(path,
dpi = NULL)
path <- "plantcyc_riken.jpeg"
knitr::include_graphics(path,
dpi = NULL)
library(Retip)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Retip)
knitr::include_graphics("plantcyc_riken.jpeg")
setwd("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip")
knitr::include_graphics("plantcyc_riken.jpeg")
library(Retip)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Retip)
knitr::include_graphics("error_hilic.jpeg")
knitr::include_graphics("pred_real_hilic.jpeg")
library(Retip)
library(Retip)
vignette(Retip)
vignette(package = "Retip")
vignette(,package = "Retip")
vignette(,package = "Retip")
vignette(package = "Retip")
help(package = "Retip", help_type = "html")
browseVignettes("Retip")
browseVignettes("Retip")
library(Retip)
browseVignettes("Retip")
browseVignettes("retip")
browseVignettes("Retip")
browseVignettes("")
install.packages("stringi")
library("roxygen2", lib.loc="~/R/win-library/3.5")
detach("package:roxygen2", unload=TRUE)
install.packages("stringi")
library(roxygen2)
install.packages("roxygen2")
library(stringi)
library("roxygen2", lib.loc="~/R/win-library/3.5")
detach("package:roxygen2", unload=TRUE)
install.packages(c("callr", "caTools", "dendextend", "ellipsis", "forge", "formatR", "ggsignif", "ggthemes", "glue", "gower", "haven", "httpuv", "knitr", "lazyeval", "lme4", "maptools", "mclust", "modelr", "mvtnorm", "network", "officer", "opencpu", "openssl", "pacman", "pROC", "processx", "purrr", "RcppArmadillo", "RCurl", "readxl", "reticulate", "rmarkdown", "sys", "tidyr", "tinytex", "xfun", "xgboost", "XML", "zip"))
library(stringi)
install.packages("stringi")
library("stringi", lib.loc="~/R/win-library/3.5")
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
library("stringi", lib.loc="~/R/win-library/3.5")
library(roxygen2)
devtools::document()
install.packages("glue")
devtools::document()
devtools::document()
library("caret", lib.loc="~/R/win-library/3.5")
install.packages("gower")
library("caret", lib.loc="~/R/win-library/3.5")
devtools::document()
library("keras", lib.loc="~/R/win-library/3.5")
install.packages("reticulate")
library("keras", lib.loc="~/R/win-library/3.5")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
usethis::use_package("stringi")
install.packages("xgboost")
library(Retip)
browseVignettes(Retip)
library(Retip)
browseVignettes(Retip)
browseVignettes("Retip")
install.packages("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retiplib_0.1.0.tar.gz", repos = NULL, type = "source")
library(Retip)
library(Retip)
library(Retip)
t<- "PLANTCYC"
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")}
if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")}
if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")}
if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")}
if ("DRUGBANK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,10] != "N/A")}
if ("SMPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,11] != "N/A")}
if ("YMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,12] != "N/A")}
if ("T3DB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,13] != "N/A")}
if ("FOODB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,14] != "N/A")}
if ("NANPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,15] != "N/A")}
if ("STOFF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,16] != "N/A")}
if ("BMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,17] != "N/A")}
if ("LIPIDMAPS" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,18] != "N/A")}
if ("URINE" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,19] != "N/A")}
if ("SALIVA" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,20] != "N/A")}
if ("FECES" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,21] != "N/A")}
if ("ECMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,22] != "N/A")}
if ("CSF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,23] != "N/A")}
if ("SERUM" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,24] != "N/A")}
if ("PLANTCYC" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,26] != "N/A")}
if ("UNPD" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,27] != "N/A")}
else {target <- t}
load("C:/Users/paolo.bonini/Dropbox (ATENS)/PTDH_RTpred/Retip/db_rt.RData")
db <- target[names(target) %in% names(db_rt)]
ncoldb <- ncol(db_rt)
pca_model <-  caret::preProcess(db, method = c("pca"))
pca_db <-  stats::predict(pca_model, db)
pca_db_rt <- stats::predict(pca_model, db_rt[,2:ncoldb])
graphics::plot(pca_db[,1],pca_db[,2],type = "p",col="blue",pch=4,xlab="", ylab="", xlim=c(-20, 50), ylim=c(-30, 30))
graphics::par(new=TRUE)
graphics::plot(pca_db_rt[,1],pca_db_rt[,2],type = "p",pch=5,col="green",xlab="PCA1", ylab="PCA2", xlim=c(-20, 50), ylim=c(-30, 30))
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")}
if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")}
if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")}
if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")}
if ("DRUGBANK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,10] != "N/A")}
if ("SMPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,11] != "N/A")}
if ("YMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,12] != "N/A")}
if ("T3DB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,13] != "N/A")}
if ("FOODB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,14] != "N/A")}
if ("NANPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,15] != "N/A")}
if ("STOFF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,16] != "N/A")}
if ("BMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,17] != "N/A")}
if ("LIPIDMAPS" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,18] != "N/A")}
if ("URINE" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,19] != "N/A")}
if ("SALIVA" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,20] != "N/A")}
if ("FECES" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,21] != "N/A")}
if ("ECMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,22] != "N/A")}
if ("CSF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,23] != "N/A")}
if ("SERUM" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,24] != "N/A")}
if ("PLANTCYC" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,26] != "N/A")}
if ("UNPD" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,27] != "N/A")}
else {target <- t}
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")}
else if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")}
else if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")}
else if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")}
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")
}else if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")
}else if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")
}else if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")
}else if ("DRUGBANK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,10] != "N/A")
}else if ("SMPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,11] != "N/A")
}else if ("YMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,12] != "N/A")
}else if ("T3DB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,13] != "N/A")
}else if ("FOODB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,14] != "N/A")
}else if ("NANPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,15] != "N/A")
}else if ("STOFF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,16] != "N/A")
}else if ("BMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,17] != "N/A")
}else if ("LIPIDMAPS" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,18] != "N/A")
}else if ("URINE" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,19] != "N/A")
}else if ("SALIVA" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,20] != "N/A")
}else if ("FECES" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,21] != "N/A")
}else if ("ECMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,22] != "N/A")
}else if ("CSF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,23] != "N/A")
}else if ("SERUM" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,24] != "N/A")
}else if ("PLANTCYC" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,26] != "N/A")
}else if ("UNPD" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,27] != "N/A")
}else {target <- t}
t<- "HMDB"
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")
}else if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")
}else if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")
}else if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")
}else if ("DRUGBANK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,10] != "N/A")
}else if ("SMPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,11] != "N/A")
}else if ("YMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,12] != "N/A")
}else if ("T3DB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,13] != "N/A")
}else if ("FOODB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,14] != "N/A")
}else if ("NANPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,15] != "N/A")
}else if ("STOFF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,16] != "N/A")
}else if ("BMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,17] != "N/A")
}else if ("LIPIDMAPS" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,18] != "N/A")
}else if ("URINE" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,19] != "N/A")
}else if ("SALIVA" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,20] != "N/A")
}else if ("FECES" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,21] != "N/A")
}else if ("ECMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,22] != "N/A")
}else if ("CSF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,23] != "N/A")
}else if ("SERUM" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,24] != "N/A")
}else if ("PLANTCYC" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,26] != "N/A")
}else if ("UNPD" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,27] != "N/A")
}else {target <- t}
t<- db_rt
if ("ALL" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,1] != "N/A")
}else if ("HMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,7] != "N/A")
}else if ("KNAPSACK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,8] != "N/A")
}else if ("CHEBI" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,9] != "N/A")
}else if ("DRUGBANK" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,10] != "N/A")
}else if ("SMPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,11] != "N/A")
}else if ("YMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,12] != "N/A")
}else if ("T3DB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,13] != "N/A")
}else if ("FOODB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,14] != "N/A")
}else if ("NANPDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,15] != "N/A")
}else if ("STOFF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,16] != "N/A")
}else if ("BMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,17] != "N/A")
}else if ("LIPIDMAPS" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,18] != "N/A")
}else if ("URINE" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,19] != "N/A")
}else if ("SALIVA" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,20] != "N/A")
}else if ("FECES" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,21] != "N/A")
}else if ("ECMDB" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,22] != "N/A")
}else if ("CSF" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,23] != "N/A")
}else if ("SERUM" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,24] != "N/A")
}else if ("PLANTCYC" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,26] != "N/A")
}else if ("UNPD" %in% t){target <- dplyr::filter(Retiplib::retip_lib_v1 , Retiplib::retip_lib_v1[,27] != "N/A")
}else {target <- t}
library(Retip)
fit.keras <- function(training,testing) {
mae1 <- "ciao"
mae1 <- "bellaciao"
mae1 <- "bellaciaociao"
loss <- "ciao"
### Data Preparation
train_data <- training
test_data <- testing
train_labels <- train_data$RT
test_labels <- test_data$RT
train_data$RT <- NULL
train_data <- as.matrix(train_data)
test_data$RT <- NULL
test_data <- as.matrix(test_data)
n_dense <- ncol(train_data)
# training model with flags tuning parameters
FLAGS <- flags(
flag_integer("dense_units", n_dense),
flag_numeric("dropout", 0.1),
flag_integer("epochs", 10000),
flag_integer("batch_size", 128),
flag_numeric("dropout2", 0.2),
flag_numeric("dropout3", 0.3),
flag_numeric("learning_rate", 0.001)
)
input <- layer_input(shape = ncol(train_data))
predictions <- input %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout) %>%
layer_dense(units = 1)
model1 <- keras_model(input, predictions) %>% compile(
loss = 'mse',
optimizer = optimizer_rmsprop(lr = FLAGS$learning_rate),
metrics = c('mean_absolute_error')
)
print(paste0("Computing model1 Keras  ... Please wait ..."))
early_stop <- callback_early_stopping(monitor = "val_loss", patience = 5000)
# Fit the model and store training stats
history1 <- model1 %>% fit(
train_data,
train_labels,
batch_size = FLAGS$batch_size,
epochs = FLAGS$epochs,
verbose = 0,
validation_split = 0.2,
callbacks = early_stop
)
#Model 2
predictions2 <- input %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout2) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout2) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout2) %>%
layer_dense(units = 1)
model2 <- keras_model(input, predictions2) %>% compile(
loss = 'mse',
optimizer = optimizer_rmsprop(lr = FLAGS$learning_rate),
metrics = c('mean_absolute_error')
)
print(paste0("Computing model2 Keras  ... Please wait ..."))
# Fit the model and store training stats
history2 <- model2 %>% fit(
train_data,
train_labels,
batch_size = FLAGS$batch_size,
epochs = FLAGS$epochs,
verbose = 0,
validation_split = 0.2,
callbacks = early_stop
)
#Model 3
predictions3 <- input %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout3) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout3) %>%
layer_dense(units = FLAGS$dense_units, activation = 'selu') %>%
layer_dropout(rate = FLAGS$dropout3) %>%
layer_dense(units = 1)
model3 <- keras_model(input, predictions3) %>% compile(
loss = 'mse',
optimizer = optimizer_rmsprop(lr = FLAGS$learning_rate),
metrics = c('mean_absolute_error')
)
print("Computing model3 Keras  ... Please wait ...")
# Fit the model and store training stats
history3 <- model3 %>% fit(
train_data,
train_labels,
batch_size = FLAGS$batch_size,
epochs = FLAGS$epochs,
verbose = 0,
validation_split = 0.2,
callbacks = early_stop
)
c(loss, mae1) %<-% (model1 %>% evaluate(test_data, test_labels, verbose = 0))
c(loss, mae2) %<-% (model2 %>% evaluate(test_data, test_labels, verbose = 0))
c(loss, mae3) %<-% (model3 %>% evaluate(test_data, test_labels, verbose = 0))
print(paste0("Mean absolute 1 error on test set: ", sprintf("%.2f", mae1)))
print(paste0("Mean absolute 2 error on test set: ", sprintf("%.2f", mae2)))
print(paste0("Mean absolute 3 error on test set: ", sprintf("%.2f", mae3)))
if (mae1 < mae2 & mae1 < mae3 ){
print("Return Model 1")
return(model1)
} else if (mae2 < mae1 & mae2 < mae3 ) {
print("Return Model 2")
return(model2)
} else {
print("Return Model 3")
return(model3)
}
}
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(Retip)
library(caret)
library(caret)
library(rcdk)
library(Retip)
library(Retip)
library(Retip)
